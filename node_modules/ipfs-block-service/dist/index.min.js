(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.IpfsBlockService = factory()}(typeof self !== 'undefined' ? self : this, function () {
var IpfsBlockService=(()=>{var a=(r,t)=>()=>(t||(t={exports:{}},r(t.exports,t)),t.exports);var o=a((k,i)=>{"use strict";var y=async function*(r,t){for await(let e of r)yield t(e)};i.exports=y});var h=a((x,c)=>{"use strict";function u(r,t){for(let e in t)Object.defineProperty(r,e,{value:t[e],enumerable:!0,configurable:!0});return r}function w(r,t,e){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");e||(e={}),typeof t=="object"&&(e=t,t=""),t&&(e.code=t);try{return u(r,e)}catch(n){e.message=r.message,e.stack=r.stack;let s=function(){};return s.prototype=Object.create(Object.getPrototypeOf(r)),u(new s,e)}}c.exports=w});var _=a((O,l)=>{"use strict";var g=o(),f=h(),b=class{constructor(t){this._repo=t,this._bitswap=null}setExchange(t){this._bitswap=t}unsetExchange(){this._bitswap=null}hasExchange(){return this._bitswap!=null}put(t,e){return this.hasExchange()?this._bitswap.put(t,e):this._repo.blocks.put(t,e)}putMany(t,e){return this.hasExchange()?this._bitswap.putMany(t,e):this._repo.blocks.putMany(t,e)}get(t,e){return this.hasExchange()?this._bitswap.get(t,e):this._repo.blocks.get(t,e)}getMany(t,e){if(!Array.isArray(t))throw new Error("first arg must be an array of cids");return this.hasExchange()?this._bitswap.getMany(t,e):g(t,n=>this._repo.blocks.get(n,e))}async delete(t,e){if(!await this._repo.blocks.has(t))throw f(new Error("blockstore: block not found"),"ERR_BLOCK_NOT_FOUND");return this._repo.blocks.delete(t,e)}deleteMany(t,e){let n=this._repo;return this._repo.blocks.deleteMany(async function*(){for await(let s of t){if(!await n.blocks.has(s))throw f(new Error("blockstore: block not found"),"ERR_BLOCK_NOT_FOUND");yield s}}(),e)}};l.exports=b});return _();})();
return IpfsBlockService}));
